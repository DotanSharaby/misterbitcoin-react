{"version":3,"sources":["components/Header/Header.jsx","services/BitCoinService.js","services/UserService.js","actions/UserActions.js","components/TransferList/TransferList.jsx","pages/HomePage/HomePage.jsx","pages/SignUpPage/SignUpPage.jsx","components/ContactPreview/ContactPreview.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","services/ContactService.js","actions/ContactsActions.js","pages/ContactPage/ContactPage.jsx","components/TransferFund/TransferFund.jsx","pages/ContactDetailsPage/ContactDetailsPage.jsx","components/ContactForm/ContactForm.jsx","pages/ContactEditPage/ContactEditPage.jsx","App.jsx","serviceWorker.js","reducers/contactReducer.js","reducers/userReducer.js","store.js","index.js"],"names":["Header","className","to","Component","getRate","coins","a","async","getMarketPrice","getConfirmedTransactions","signup","name","user","JSON","parse","localStorage","getItem","transfers","_newUser","setItem","stringify","Promise","resolve","addTransfer","contact","amount","unshift","transferFormat","_id","updateStorage","getLoggedinUser","toId","at","Date","now","setUser","type","dispatch","UserService","TransferList","length","map","value","index","key","HomePage","state","rate","BitCoinService","res","this","props","setState","history","push","slice","mapDispatchToProps","connect","SignUp","update","ev","field","target","prevState","userSignup","preventDefault","onSubmit","placeholder","onChange","e","ContactPreview","height","src","alt","contacts","ContactFilter","handleFilter","getContacts","filterBy","reject","term","contactsToReturn","toLocaleLowerCase","filter","includes","phone","email","sort","b","getContactById","id","find","deleteContact","findIndex","splice","saveContact","c","_updateContact","txt","possible","i","charAt","Math","floor","random","_makeId","_addContact","getEmptyContact","window","updateContact","addContact","setContacts","setCurrContact","ContactPage","filteredContacts","filterContacts","prevProps","contactsToShow","ContactService","contactReducer","TransferFund","transfer","max","min","ContactDetailsPage","makeTransfer","filterTransfers","t","match","params","updatedUser","userReducer","ContactForm","save","currContact","contactId","savedContact","ContactEditPage","loadCurrContact","App","exact","path","component","SignUpPage","ContactDetails","React","Boolean","location","hostname","INITIAL_STATE","rootReducer","combineReducers","action","idx","store","createStore","applyMiddleware","thunk","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.38a1ab3e.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Header.scss'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <nav>\r\n                    <Link to='/'>Home</Link>\r\n                    <span> | </span>\r\n                    <Link to='/contact'>Contacts</Link>\r\n                </nav>\r\n                <h2>Mister BitCoin</h2>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n","\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    getRate,\r\n    getMarketPrice,\r\n    getConfirmedTransactions\r\n}\r\n\r\nasync function getRate(coins) {\r\n    // const res = getMarketPrice();\r\n    // return coins / res;\r\n    return 0.15\r\n}\r\n\r\nasync function getMarketPrice() {\r\n    // const res = await axios.get(`https://blockchain.info/tobtc?currency=USD&value=1`);\r\n    // return res.data;\r\n}\r\n\r\nfunction getConfirmedTransactions() {\r\n\r\n}","\r\nexport default {\r\n    signup,\r\n    addTransfer,\r\n    getLoggedinUser\r\n}\r\n\r\nfunction addTransfer(user, contact, amount) {\r\n    user.transfers.unshift(transferFormat(contact._id,contact.name,amount))\r\n    user.coins -= amount;\r\n    updateStorage(user);\r\n    return Promise.resolve(user)\r\n}\r\n\r\nfunction transferFormat(toId, to, amount) {\r\n    return {\r\n        toId,\r\n        to,\r\n        amount,\r\n        at: Date.now()\r\n    }\r\n}\r\n\r\nfunction signup(name) {\r\n    var user = JSON.parse(localStorage.getItem(name))\r\n    if (!user) {\r\n        user = _newUser(name);\r\n        localStorage.setItem(user.name, JSON.stringify(user));\r\n    }\r\n    localStorage.setItem(\"loggedinUser\", JSON.stringify(user));\r\n    return Promise.resolve(user)\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    const user = JSON.parse(localStorage.getItem(\"loggedinUser\"))\r\n    return Promise.resolve(user)\r\n}\r\n\r\nfunction updateStorage(user){\r\n    localStorage.setItem(user.name, JSON.stringify(user));\r\n    localStorage.setItem(\"loggedinUser\", JSON.stringify(user));\r\n}\r\n\r\nfunction _newUser(name) {\r\n    return {\r\n        name,\r\n        coins: 100,\r\n        transfers: []\r\n    }\r\n}","import UserService from '../services/UserService'\r\n\r\nconst setUser = (user) => {\r\n    return { type: 'SET_USER', user }\r\n}\r\n\r\nexport const signup = ({ name }) => {\r\n    return async (dispatch) => {\r\n        const user = await UserService.signup(name);\r\n        return dispatch(setUser(user))\r\n    }\r\n}\r\n\r\nexport const getLoggedinUser = () => {\r\n    return async (dispatch) => {\r\n        const user = await UserService.getLoggedinUser();\r\n        return dispatch(setUser(user))\r\n    }\r\n}\r\n\r\nexport const makeTransfer = (user, contact, amount) => {\r\n    return async (dispatch) => {\r\n        const updatedUser = await UserService.addTransfer(user, contact, amount);\r\n        return dispatch(setUser(updatedUser))\r\n    }\r\n}","import React from 'react';\r\n\r\nexport function TransferList({ transfers }) {\r\n\r\n    if (transfers.length) return (\r\n        <ul className=\"clean-list\">\r\n            {transfers.map((value, index) => {\r\n                return <li key={index}>{value.to}</li>\r\n            })}\r\n        </ul>\r\n    ); else return (\r\n        <>\r\n            <h4>No previous transfers</h4>\r\n        </>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport BitCoinService from '../../services/BitCoinService'\r\nimport { connect } from 'react-redux';\r\nimport { getLoggedinUser } from '../../actions/UserActions'\r\nimport { TransferList } from '../../components/TransferList/TransferList'\r\n\r\nclass HomePage extends Component {\r\n    state = {\r\n        rate: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await BitCoinService.getRate();\r\n        const { user } = await this.props.getLoggedinUser();\r\n        this.setState({\r\n            rate: res,\r\n            user\r\n        })\r\n        if (!user) this.props.history.push('/signup')\r\n    }\r\n\r\n    render() {\r\n        const { rate, user } = this.state\r\n        if (user) return (rate && <div>\r\n            <h3>Hi {user.name} !</h3>\r\n            <p>BitCoins: {user.coins}</p>\r\n            <h5>BTC: {rate}</h5>\r\n            <TransferList transfers={user.transfers.slice(0, 3)} />\r\n        </div>\r\n        )\r\n        else return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedinUser\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(HomePage);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signup } from '../../actions/UserActions'\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        name: null\r\n    }\r\n\r\n    update = (ev, field) => {\r\n        const { value } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                name: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    userSignup = async (ev) => {\r\n        ev.preventDefault()\r\n        await this.props.signup(this.state.name);\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.userSignup}>\r\n                    <h3>Signup page!</h3>\r\n                    <input type=\"text\" placeholder=\"username\" onChange={(e) => this.update(e, \"name\")} />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = () => {\r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signup\r\n}\r\n\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(SignUp)","import React from 'react'\r\n\r\nexport default function ContactPreview(props) {\r\n    const { contact } = props;\r\n    return (\r\n        <li>\r\n            <span>\r\n                <img height=\"50px\" src={`https://robohash.org/${contact.name}.png`} alt=\"\" />\r\n            </span>\r\n            <span>{contact.name}</span>\r\n        </li>\r\n    )\r\n}","import React from 'react'\r\nimport './ContactList.scss'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ContactPreview from '../ContactPreview/ContactPreview'\r\n\r\nexport default function ({ contacts }) {\r\n    return (<ul className=\"clean-list\">\r\n        {contacts.map(contact => {\r\n            return (\r\n                <Link to={`contact/${contact._id}`} key={contact._id}>\r\n                    <ContactPreview contact={contact} />\r\n                </Link>\r\n            )\r\n        })}\r\n    </ul>)\r\n}","import React from 'react'\r\n\r\nexport function ContactFilter({ handleFilter }) {\r\n    return (\r\n        <input type=\"text\" placeholder=\" filter\" onChange={(ev) => handleFilter(ev.target.value)} />\r\n    )\r\n}","\nexport default {\n  getContacts,\n  getContactById,\n  deleteContact,\n  saveContact,\n  getEmptyContact\n}\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n    return 0;\n  })\n}\n\nfunction getContacts(filterBy = null) {\n  return new Promise((resolve, reject) => {\n    var contactsToReturn = contacts;\n    if (filterBy) {\n      contactsToReturn = filter(filterBy)\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById(id) {\n  return new Promise((resolve, reject) => {\n    const contact = contacts.find(contact => contact._id === id)\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n  })\n}\n\nfunction deleteContact(id) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => {\n    contact._id = _makeId()\n    contacts.push(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter(term) {\n  term = term.toLocaleLowerCase()\n  return contacts.filter(contact => {\n    return contact.name.toLocaleLowerCase().includes(term) ||\n      contact.phone.toLocaleLowerCase().includes(term) ||\n      contact.email.toLocaleLowerCase().includes(term)\n  })\n}\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}\n\n\nconst contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\",\n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\",\n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\",\n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\",\n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\",\n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n\n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\",\n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\",\n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\",\n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\",\n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nwindow.contacts = contacts","import ContactService from '../services/ContactService'\r\n\r\nconst updateContact = (contact) => {\r\n    return { type: 'UPDATE_CONTACT', contact }\r\n}\r\n\r\nconst addContact = (contact) => {\r\n    return { type: 'ADD_CONTACT', contact }\r\n}\r\n\r\nexport const saveContact = (contact) => {\r\n    const contactId = contact._id;\r\n    return async (dispatch) => {\r\n        const savedContact = await ContactService.saveContact(contact);\r\n        if (contactId) {\r\n            return dispatch(updateContact(savedContact))\r\n        } else {\r\n            return dispatch(addContact(savedContact))\r\n        }\r\n    }\r\n}\r\n\r\nconst setContacts = (contacts) => {\r\n    return { type: 'SET_CONTACTS', contacts }\r\n}\r\n\r\nexport const getContacts = (filterBy) => {\r\n    return async (dispatch) => {\r\n        const contacts = await ContactService.getContacts(filterBy);\r\n        return dispatch(setContacts(contacts))\r\n    }\r\n}\r\n\r\nexport const setCurrContact = (contact) => {\r\n    return { type: 'SET_CURR_CONTACT', contact }\r\n}\r\n\r\nexport const loadCurrContact = (id) => {\r\n    return async (dispatch) => {\r\n        const contact = await ContactService.getContactById(id);\r\n        return dispatch(setCurrContact(contact))\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport ContactList from '../../components/ContactList/ContactList'\r\nimport { ContactFilter } from '../../components/ContactFilter/ContactFilter'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { getContacts } from '../../actions/ContactsActions'\r\nimport { getLoggedinUser } from '../../actions/UserActions'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass ContactPage extends Component {\r\n    state = {\r\n        term: '',\r\n        filteredContacts: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const filteredContacts = await this.filterContacts();\r\n        this.setState({ filteredContacts })\r\n        const { user } = await this.props.getLoggedinUser();\r\n        if (!user) this.props.history.push('/signup')\r\n    }\r\n\r\n    handleFilter = (value) => {\r\n        this.setState({ term: value })\r\n    }\r\n\r\n    filterContacts = async () => {\r\n        const term = this.state.term\r\n        const { contacts } = await this.props.getContacts(term)\r\n        return contacts;\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.term === this.state.term) return\r\n        const filteredContacts = await this.filterContacts()\r\n        this.setState({ filteredContacts })\r\n    }\r\n\r\n    render() {\r\n        const { filteredContacts } = this.state;\r\n        const { contacts } = this.props;\r\n        let contactsToShow;\r\n        if (!filteredContacts) contactsToShow = contacts\r\n        else contactsToShow = filteredContacts\r\n\r\n        return (<>\r\n            <Link to=\"/contact/edit\">Add Contact</Link>\r\n            <span> | </span>\r\n            <ContactFilter handleFilter={this.handleFilter} />\r\n            <ContactList contacts={contactsToShow} />\r\n        </>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contactReducer.contacts\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    getContacts,\r\n    getLoggedinUser\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactPage)","import React, { Component } from 'react'\r\n\r\nexport default class TransferFund extends Component {\r\n    state = {\r\n        amount: null\r\n    }\r\n\r\n    update = (ev) => {\r\n        const { value } = ev.target\r\n        this.setState({ amount: value })\r\n    }\r\n\r\n    render() {\r\n        const { user, transfer } = this.props\r\n        const { amount } = this.state\r\n        if (user) return (\r\n            <form onSubmit={(ev) => transfer(ev, amount)} >\r\n                <label>\r\n                    Transer BitCoin\r\n                <input type=\"number\" max={user.coins} min=\"0\" onChange={(e) => this.update(e)} />\r\n                </label>\r\n                <button>Transfer</button>\r\n            </form>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport ContactService from '../../services/ContactService'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport TransferFund from '../../components/TransferFund/TransferFund';\r\nimport { TransferList } from '../../components/TransferList/TransferList';\r\nimport { getLoggedinUser, makeTransfer } from '../../actions/UserActions'\r\n\r\nclass ContactDetailsPage extends Component {\r\n    state = {\r\n        contact: null,\r\n        amount: null,\r\n        transfers: []\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        const contact = await ContactService.getContactById(id);\r\n        if (contact) this.setState({ contact })\r\n        const { user } = await this.props.getLoggedinUser();\r\n        this.setState({ user })\r\n        if (!user) this.props.history.push('/signup');\r\n        this.filterTransfers(user, contact);\r\n    }\r\n\r\n    transfer = async (ev, amount) => {\r\n        ev.preventDefault();\r\n        const { user, contact } = this.state;\r\n        await this.props.makeTransfer(user, contact, amount);\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    filterTransfers = (user, contact) => {\r\n        var transfers = user.transfers.filter(t => t.toId === contact._id);\r\n        transfers = transfers.slice(0, 3)\r\n        this.setState({ transfers })\r\n    }\r\n\r\n    render() {\r\n        const { contact, transfers } = this.state\r\n        const { user } = this.props\r\n        if (contact) return (\r\n            <section className=\"contact-details\">\r\n                <h3>{contact.name}</h3>\r\n                <img src={`https://robohash.org/${contact.name}.png`} alt=\"User\" />\r\n                <h5>{contact.email}</h5>\r\n                <h5>{contact.phone}</h5>\r\n\r\n                <TransferFund transfer={this.transfer} user={user} />\r\n\r\n                <Link to=\"/contact\">\r\n                    <button>Back</button>\r\n                </Link>\r\n                <Link to={'/contact/edit/' + contact._id}>Edit</Link>\r\n\r\n                <TransferList transfers={transfers} />\r\n\r\n            </section>\r\n        )\r\n        else return (\r\n            <div><h1>No contact was found</h1></div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userReducer.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedinUser,\r\n    makeTransfer\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactDetailsPage)","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport ContactService from '../../services/ContactService'\r\nimport { connect } from 'react-redux'\r\n\r\nimport { saveContact } from '../../actions/ContactsActions'\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        contact: ContactService.getEmptyContact()\r\n    }\r\n    componentDidMount() {\r\n        const contact = this.props.currContact;\r\n        if (contact) this.setState({ contact })\r\n    }\r\n    update = (ev, field) => {\r\n        const { value } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    save = async (ev) => {\r\n        ev.preventDefault()\r\n        await this.props.saveContact(this.state.contact);\r\n        this.props.history.push('/contact')\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.state;\r\n        return (\r\n            <>\r\n                <form onSubmit={this.save}>\r\n                    <label>Name:\r\n                <input type=\"text\" value={contact.name} onChange={(e) => this.update(e, \"name\")} />\r\n                    </label>\r\n                    <br />\r\n                    <label>email:\r\n                <input type=\"email\" value={contact.email} onChange={(e) => this.update(e, \"email\")} />\r\n                    </label>\r\n                    <br />\r\n                    <label>phone:\r\n                <input type=\"tel\" value={contact.phone} onChange={(e) => this.update(e, \"phone\")} />\r\n                    </label>\r\n                    <br />\r\n                    <button>Save</button>\r\n                </form>\r\n                <Link to=\"/contact\">\r\n                    <button>Back</button>\r\n                </Link>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    \r\n    return {\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveContact\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactForm)","import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { loadCurrContact, setCurrContact } from '../../actions/ContactsActions'\r\n\r\nimport ContactForm from '../../components/ContactForm/ContactForm'\r\n\r\nclass ContactEditPage extends Component {\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params\r\n        if (id) {\r\n            await this.props.loadCurrContact(id)\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.setCurrContact(null);\r\n    }\r\n\r\n    render() {\r\n        const { currContact, history } = this.props\r\n        if (!currContact) return (\r\n            <section className=\"contact-edit\">\r\n                <h3>Add Contact</h3>\r\n                <ContactForm history={history} />\r\n            </section>\r\n        )\r\n        else return (\r\n            <div>\r\n                <h3>Edit Contact</h3>\r\n                <ContactForm currContact={currContact} history={history} />\r\n                {/* TODO: MAKE IT WORk */}\r\n                <button>Delete</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currContact: state.contactReducer.currContact\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    loadCurrContact,\r\n    setCurrContact\r\n};\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactEditPage)","import React from 'react';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom'\n\nimport Header from './components/Header/Header'\nimport HomePage from './pages/HomePage/HomePage'\nimport SignUpPage from './pages/SignUpPage/SignUpPage'\nimport ContactPage from './pages/ContactPage/ContactPage'\nimport ContactDetails from './pages/ContactDetailsPage/ContactDetailsPage'\nimport ContactEditPage from './pages/ContactEditPage/ContactEditPage'\n\nimport { connect } from 'react-redux'\n\nclass App extends React.Component {\n\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/signup\" component={SignUpPage} />\n          <Route exact path=\"/contact\" component={ContactPage} />\n          <Route exact path=\"/contact/edit/:id?\" component={ContactEditPage} />\n          <Route exact path=\"/contact/:id\" component={ContactDetails} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\r\n    contacts: [],\r\n    currContact: null\r\n}\r\n\r\nexport default function contactReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact: action.contact\r\n            }\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            }\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts.filter(currContact => {\r\n                    return action.contact._id !== currContact._id\r\n                })]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            let idx = state.contacts.findIndex(currContact => {\r\n                return currContact._id === action.contact._id\r\n            })\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    ...state.contacts.slice(0, idx),\r\n                    action.contact,\r\n                    ...state.contacts.slice(idx + 1)\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const INITIAL_STATE = {\r\n    user: {}\r\n}\r\n\r\nexport default function userReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport contactReducer from './reducers/contactReducer'\r\nimport userReducer from './reducers/userReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    contactReducer,\r\n    userReducer\r\n})\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n)\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport { HashRouter as Router } from 'react-router-dom'\nimport { createBrowserHistory } from 'history'\nconst history = createBrowserHistory()\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}