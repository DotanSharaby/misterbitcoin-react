{"version":3,"sources":["components/Header/Header.jsx","services/BitCoinService.js","services/UserService.js","actions/UserActions.js","components/TransferList/TransferList.jsx","pages/HomePage/HomePage.jsx","pages/SignUpPage/SignUpPage.jsx","components/ContactPreview/ContactPreview.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","services/ContactService.js","actions/ContactsActions.js","pages/ContactsPage/ContactsPage.jsx","components/TransferFund/TransferFund.jsx","pages/ContactDetailsPage/ContactDetailsPage.jsx","components/ContactForm/ContactForm.jsx","pages/ContactEditPage/ContactEditPage.jsx","components/Chart/Chart.jsx","pages/StatistictsPage/StatistictsPage.jsx","App.jsx","serviceWorker.js","reducers/contactReducer.js","reducers/userReducer.js","store.js","index.js"],"names":["Header","state","isOpen","toggleMenu","setState","className","this","onClick","to","icon","faHome","faUsers","faChartLine","Component","getRate","a","async","axios","get","res","data","getMarketPrice","getConfirmedTransactions","signup","name","user","JSON","parse","localStorage","getItem","coins","transfers","_newUser","setItem","stringify","Promise","resolve","addTransfer","contact","amount","unshift","transferFormat","_id","updateStorage","getLoggedinUser","toId","at","Date","toJSON","slice","setUser","type","dispatch","UserService","TransferList","length","map","value","index","key","HomePage","rate","BitCoinService","props","history","push","Container","Row","Col","lg","faCoins","mapDispatchToProps","connect","SignUp","update","ev","field","target","prevState","userSignup","preventDefault","onSubmit","placeholder","onChange","e","ContactPreview","height","src","alt","contacts","ContactFilter","handleFilter","Form","inline","FormControl","getContacts","filterBy","reject","term","contactsToReturn","toLocaleLowerCase","filter","includes","phone","email","sort","b","getContactById","id","find","removeContact","findIndex","splice","saveContact","c","_updateContact","txt","possible","i","charAt","Math","floor","random","_makeId","_addContact","getEmptyContact","window","updateContact","addContact","removeContactFromStore","contactId","setContacts","setCurrContact","ContactsPage","filteredContacts","filterContacts","prevProps","contactsToShow","faPlus","ContactService","contactReducer","TransferFund","transfer","Group","Label","Control","size","max","min","Button","faPaperPlane","ContactDetailsPage","makeTransfer","filterTransfers","t","back","go","match","params","faArrowLeft","faEdit","updatedUser","userReducer","ContactForm","remove","currContact","save","loadCurrContact","controlId","ButtonToolbar","variant","faTrash","savedContact","ContactEditPage","Chart","options","highcharts","Highcharts","StatisticsPage","marketPriceData","dailyTransData","formatData","xAxis","labels","format","title","text","series","curr","x","y","App","exact","path","component","SignUpPage","ContactDetails","React","Boolean","location","hostname","INITIAL_STATE","rootReducer","combineReducers","action","idx","store","createStore","applyMiddleware","thunk","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.06096574.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faUsers, faChartLine } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Header.scss';\r\n\r\nexport default class Header extends Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        const { isOpen } = this.state;\r\n        this.setState({ isOpen: !isOpen })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <header className={this.state.isOpen ? \"opened-menu\" : \"\"}>\r\n                <div className=\"screen\" onClick={this.toggleMenu}></div>\r\n                <span className=\"logo\">Mister BitCoin</span>\r\n                <nav className=\"navbar-nav\" onClick={this.toggleMenu}>\r\n                    <Link to='/' className=\"nav-item\"><FontAwesomeIcon icon={faHome} /></Link>\r\n                    <Link to='/contact' className=\"nav-item\"><FontAwesomeIcon icon={faUsers} /></Link>\r\n                    <Link to='/statistics' className=\"nav-item\"><FontAwesomeIcon icon={faChartLine} /></Link>\r\n                </nav>\r\n                <button onClick={this.toggleMenu} className=\"menu-btn\">☰</button>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n","\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n    getRate,\r\n    getMarketPrice,\r\n    getConfirmedTransactions\r\n}\r\n\r\nasync function getRate() {\r\n    const res = await axios.get(`https://blockchain.info/tobtc?currency=USD&value=1`);\r\n    return res.data;\r\n}\r\n\r\nasync function getMarketPrice() {\r\n    const res = await axios.get(`https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true`);\r\n    return res.data;\r\n}\r\n\r\nasync function getConfirmedTransactions() {\r\n    const res = await axios.get(`https://api.blockchain.info/charts/n-transactions?timespan=5months&format=json&cors=true`);\r\n    return res.data;\r\n}","\r\nexport default {\r\n    signup,\r\n    addTransfer,\r\n    getLoggedinUser\r\n}\r\n\r\nfunction addTransfer(user, contact, amount) {\r\n    user.transfers.unshift(transferFormat(contact._id,contact.name,amount))\r\n    user.coins -= amount;\r\n    updateStorage(user);\r\n    return Promise.resolve(user);\r\n}\r\n\r\nfunction transferFormat(toId, to, amount) {\r\n    return {\r\n        toId,\r\n        to,\r\n        amount,\r\n        at: new Date().toJSON().slice(0,10)\r\n    }\r\n}\r\n\r\nfunction signup(name) {\r\n    var user = JSON.parse(localStorage.getItem(name))\r\n    if (!user) {\r\n        user = _newUser(name);\r\n        localStorage.setItem(user.name, JSON.stringify(user));\r\n    }\r\n    localStorage.setItem(\"loggedinUser\", JSON.stringify(user));\r\n    return Promise.resolve(user)\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    const user = JSON.parse(localStorage.getItem(\"loggedinUser\"))\r\n    return Promise.resolve(user)\r\n}\r\n\r\nfunction updateStorage(user){\r\n    localStorage.setItem(user.name, JSON.stringify(user));\r\n    localStorage.setItem(\"loggedinUser\", JSON.stringify(user));\r\n}\r\n\r\nfunction _newUser(name) {\r\n    return {\r\n        name,\r\n        coins: 100,\r\n        transfers: []\r\n    }\r\n}","import UserService from '../services/UserService'\r\n\r\nconst setUser = (user) => {\r\n    return { type: 'SET_USER', user }\r\n}\r\n\r\nexport const signup = ({ name }) => {\r\n    return async (dispatch) => {\r\n        const user = await UserService.signup(name);\r\n        return dispatch(setUser(user))\r\n    }\r\n}\r\n\r\nexport const getLoggedinUser = () => {\r\n    return async (dispatch) => {\r\n        const user = await UserService.getLoggedinUser();\r\n        return dispatch(setUser(user))\r\n    }\r\n}\r\n\r\nexport const makeTransfer = (user, contact, amount) => {\r\n    return async (dispatch) => {\r\n        const updatedUser = await UserService.addTransfer(user, contact, amount);\r\n        return dispatch(setUser(updatedUser))\r\n    }\r\n}","import React from 'react';\r\nimport './TransferList.scss';\r\n\r\nexport function TransferList({ transfers }) {\r\n\r\n    if (transfers.length) return (\r\n        <>\r\n            <h4>Transfter history:</h4>\r\n            <ul className=\"clean-list\">\r\n                {transfers.map((value, index) => {\r\n                    return <li className=\"d-flex flex-column transfer-info-container\" key={index}>\r\n                        <span>To: {value.to}</span>\r\n                        <span>Amount: ₿{value.amount}</span>\r\n                        <span>At: {value.at}</span>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n        </>\r\n    ); else return (\r\n        <h4>No previous transfers</h4>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport BitCoinService from '../../services/BitCoinService';\r\nimport './HomePage.scss';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoins } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { getLoggedinUser } from '../../actions/UserActions';\r\nimport { TransferList } from '../../components/TransferList/TransferList';\r\n\r\nclass HomePage extends Component {\r\n    state = {\r\n        rate: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await BitCoinService.getRate();\r\n        const { user } = await this.props.getLoggedinUser();\r\n        this.setState({\r\n            rate: res,\r\n            user\r\n        });\r\n        if (!user) this.props.history.push('/signup');\r\n    }\r\n\r\n    render() {\r\n        const { rate, user } = this.state;\r\n        if (user) return (\r\n            rate &&\r\n            <Container className=\"homepage-container\">\r\n                <Row>\r\n                    <Col lg={true}>\r\n                        <h3>Hi {user.name} !</h3>\r\n                        <h5><FontAwesomeIcon icon={faCoins} /> BitCoins: {user.coins}</h5>\r\n                        <h5>BTC: ₿{rate}</h5>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={true}>\r\n                        <TransferList transfers={user.transfers.slice(0, 3)} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n        else return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedinUser\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(HomePage);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signup } from '../../actions/UserActions'\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        name: null\r\n    }\r\n\r\n    update = (ev, field) => {\r\n        const { value } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                name: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    userSignup = async (ev) => {\r\n        ev.preventDefault();\r\n        await this.props.signup(this.state.name);\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.userSignup}>\r\n                <h3>Signup page!</h3>\r\n                <input type=\"text\" placeholder=\"username\" \r\n                onChange={(e) => this.update(e, \"name\")} />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signup\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(SignUp)","import React from 'react';\r\n\r\nexport default function ContactPreview(props) {\r\n    const { contact } = props;\r\n    return (\r\n        <li>\r\n            <img height=\"50px\" src={`https://robohash.org/${contact.name}.png`} alt=\"Contact\" />\r\n            <span>{contact.name}</span>\r\n        </li>\r\n    )\r\n}","import React from 'react';\r\nimport './ContactList.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ContactPreview from '../ContactPreview/ContactPreview';\r\n\r\nexport default function ({ contacts }) {\r\n    return (\r\n        <ul className=\"clean-list\">\r\n            {contacts.map(contact => {\r\n                return (\r\n                    <Link to={`contact/${contact._id}`} key={contact._id}>\r\n                        <ContactPreview contact={contact} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport './ContactFilter.scss'\r\nexport function ContactFilter({ handleFilter }) {\r\n    return (\r\n        <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-auto ml-auto\" onChange={(ev) => handleFilter(ev.target.value)} />\r\n        </Form>\r\n    )\r\n}\r\n\r\n","\nexport default {\n  getContacts,\n  getContactById,\n  removeContact,\n  saveContact,\n  getEmptyContact\n}\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n    return 0;\n  })\n}\n\nfunction getContacts(filterBy = null) {\n  return new Promise((resolve, reject) => {\n    var contactsToReturn = contacts;\n    if (filterBy) {\n      contactsToReturn = filter(filterBy)\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById(id) {\n  return new Promise((resolve, reject) => {\n    const contact = contacts.find(contact => contact._id === id)\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n  })\n}\n\nfunction removeContact(id) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => {\n    contact._id = _makeId()\n    contacts.push(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter(term) {\n  term = term.toLocaleLowerCase()\n  return contacts.filter(contact => {\n    return contact.name.toLocaleLowerCase().includes(term) ||\n      contact.phone.toLocaleLowerCase().includes(term) ||\n      contact.email.toLocaleLowerCase().includes(term)\n  })\n}\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}\n\n\nconst contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\",\n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\",\n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\",\n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\",\n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\",\n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n\n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\",\n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\",\n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\",\n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\",\n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nwindow.contacts = contacts","import ContactService from '../services/ContactService';\r\n\r\nconst updateContact = (contact) => {\r\n    return { type: 'UPDATE_CONTACT', contact }\r\n}\r\n\r\nconst addContact = (contact) => {\r\n    return { type: 'ADD_CONTACT', contact }\r\n}\r\n\r\nexport const saveContact = (contact) => {\r\n    const contactId = contact._id;\r\n    return async (dispatch) => {\r\n        const savedContact = await ContactService.saveContact(contact);\r\n        if (contactId) {\r\n            return dispatch(updateContact(savedContact))\r\n        } else {\r\n            return dispatch(addContact(savedContact))\r\n        }\r\n    }\r\n}\r\n\r\nconst removeContactFromStore = (contactId) => {\r\n    return { type: 'REMOVE_CONTACT', contactId }\r\n}\r\n\r\nexport const removeContact = (contact) => {\r\n    const contactId = contact._id;\r\n    return async (dispatch) => {\r\n        await ContactService.removeContact(contactId);\r\n        return dispatch(removeContactFromStore(contactId))\r\n    }\r\n}\r\n\r\nconst setContacts = (contacts) => {\r\n    return { type: 'SET_CONTACTS', contacts }\r\n}\r\n\r\nexport const getContacts = (filterBy) => {\r\n    return async (dispatch) => {\r\n        const contacts = await ContactService.getContacts(filterBy);\r\n        return dispatch(setContacts(contacts))\r\n    }\r\n}\r\n\r\nexport const setCurrContact = (contact) => {\r\n    return { type: 'SET_CURR_CONTACT', contact }\r\n}\r\n\r\nexport const loadCurrContact = (id) => {\r\n    return async (dispatch) => {\r\n        const contact = await ContactService.getContactById(id);\r\n        return dispatch(setCurrContact(contact))\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport ContactList from '../../components/ContactList/ContactList';\r\nimport { ContactFilter } from '../../components/ContactFilter/ContactFilter';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getContacts } from '../../actions/ContactsActions';\r\nimport { getLoggedinUser } from '../../actions/UserActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './ContactsPage.scss';\r\n\r\nclass ContactsPage extends Component {\r\n    state = {\r\n        term: '',\r\n        filteredContacts: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const filteredContacts = await this.filterContacts();\r\n        this.setState({ filteredContacts })\r\n        const { user } = await this.props.getLoggedinUser();\r\n        if (!user) this.props.history.push('/signup')\r\n    }\r\n\r\n    handleFilter = (value) => {\r\n        this.setState({ term: value })\r\n    }\r\n\r\n    filterContacts = async () => {\r\n        const term = this.state.term\r\n        const { contacts } = await this.props.getContacts(term)\r\n        return contacts;\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.term === this.state.term) return\r\n        const filteredContacts = await this.filterContacts()\r\n        this.setState({ filteredContacts })\r\n    }\r\n\r\n    render() {\r\n        const { filteredContacts } = this.state;\r\n        const { contacts } = this.props;\r\n        let contactsToShow;\r\n        if (!filteredContacts) contactsToShow = contacts;\r\n        else contactsToShow = filteredContacts;\r\n\r\n        return (\r\n            <Container className=\"contacts-page-container\">\r\n                <Row>\r\n                    <Col lg={true}>\r\n                        <Link to=\"/contact/edit\"><FontAwesomeIcon icon={faPlus} className=\"add-contact-btn\" /></Link>\r\n                        <ContactFilter handleFilter={this.handleFilter} />\r\n                        <ContactList contacts={contactsToShow} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contactReducer.contacts\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    getContacts,\r\n    getLoggedinUser\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactsPage)","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './TransferFund.scss';\r\n\r\n\r\nexport default class TransferFund extends Component {\r\n    state = {\r\n        amount: null\r\n    }\r\n\r\n    update = (ev) => {\r\n        const { value } = ev.target\r\n        this.setState({ amount: value })\r\n    }\r\n\r\n    render() {\r\n        const { user, transfer } = this.props\r\n        const { amount } = this.state\r\n        if (user) return (\r\n            <Form onSubmit={(ev) => transfer(ev, amount)} className=\"transfer-form\">\r\n                <Form.Group>\r\n                    <Form.Label>Transfer BitCoin ₿</Form.Label>\r\n                    <Form.Control\r\n                        size=\"sm\" type=\"number\" max={user.coins} min=\"0\"\r\n                        placeholder=\"0\"\r\n                        onChange={(e) => this.update(e)}\r\n                    />\r\n\r\n                    <Button type=\"submit\" size=\"sm\">\r\n                        <FontAwesomeIcon size=\"sm\" icon={faPaperPlane} />\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ContactService from '../../services/ContactService';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport TransferFund from '../../components/TransferFund/TransferFund';\r\nimport { TransferList } from '../../components/TransferList/TransferList';\r\nimport { getLoggedinUser, makeTransfer } from '../../actions/UserActions';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport './ContactDetailsPage.scss';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nclass ContactDetailsPage extends Component {\r\n    state = {\r\n        contact: null,\r\n        amount: null,\r\n        transfers: []\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const contact = await ContactService.getContactById(id);\r\n        if (contact) this.setState({ contact });\r\n        const { user } = await this.props.getLoggedinUser();\r\n        this.setState({ user });\r\n        if (!user) this.props.history.push('/signup');\r\n        this.filterTransfers(user, contact);\r\n    }\r\n\r\n    transfer = async (ev, amount) => {\r\n        ev.preventDefault();\r\n        const { user, contact } = this.state;\r\n        await this.props.makeTransfer(user, contact, amount);\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    filterTransfers = (user, contact) => {\r\n        var transfers = user.transfers.filter(t => t.toId === contact._id);\r\n        transfers = transfers.slice(0, 3)\r\n        this.setState({ transfers })\r\n    }\r\n\r\n    back = () => {\r\n        this.props.history.go(-1);\r\n    }\r\n\r\n    render() {\r\n        const { contact, transfers } = this.state;\r\n        const { user } = this.props;\r\n        \r\n        if (contact) return (\r\n            <Container className=\"contact-details\">\r\n                <h3>{contact.name}</h3>\r\n                <img src={`https://robohash.org/${contact.name}.png`} height=\"80px\" alt=\"Contact\" />\r\n                <h5>{contact.email}</h5>\r\n                <h5>{contact.phone}</h5>\r\n\r\n                <TransferFund transfer={this.transfer} user={user} />\r\n\r\n                <Button onClick={this.back} size=\"sm\" className=\"btn-back\">\r\n                    <FontAwesomeIcon icon={faArrowLeft} />\r\n                </Button>\r\n                <Link to={'/contact/edit/' + contact._id} className=\"btn-edit\">\r\n                    <Button size=\"sm\">\r\n                        <FontAwesomeIcon icon={faEdit} />\r\n                    </Button>\r\n                </Link>\r\n                <TransferList transfers={transfers} />\r\n            </Container>\r\n        )\r\n        else return (\r\n            <h1>No contact was found</h1>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userReducer.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedinUser,\r\n    makeTransfer\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactDetailsPage)","import React, { Component } from 'react';\r\nimport ContactService from '../../services/ContactService';\r\nimport { connect } from 'react-redux';\r\nimport './ContactForm.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { saveContact, removeContact, loadCurrContact } from '../../actions/ContactsActions';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonToolbar from 'react-bootstrap/ButtonToolbar';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        contact: ContactService.getEmptyContact()\r\n    }\r\n    async componentDidMount() {\r\n        let contact;\r\n        if (this.props._id) {\r\n            contact = await this.props.loadCurrContact(this.props._id);\r\n            contact = contact.contact;\r\n        }\r\n        else contact = ContactService.getEmptyContact();\r\n        this.setState({ contact });\r\n    }\r\n    update = (ev, field) => {\r\n        const { value } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    remove = async () => {\r\n        const { currContact, removeContact } = this.props;\r\n        await removeContact(currContact);\r\n        this.props.history.push('/contact');\r\n    }\r\n\r\n    save = async (ev) => {\r\n        ev.preventDefault();\r\n        await this.props.saveContact(this.state.contact);\r\n        this.props.history.push('/contact');\r\n    }\r\n\r\n    back = () => {\r\n        this.props.history.go(-1);\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.state;\r\n        return (\r\n            contact && <Container>\r\n                <Form onSubmit={this.save} className=\"my-form\">\r\n                    {contact._id ? <h3>Edit Contact</h3> : <h3>Add Contact</h3>}\r\n                    <Form.Group controlId=\"formGroupName\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            size=\"sm\" type=\"text\"\r\n                            placeholder=\"Enter name\"\r\n                            value={contact.name}\r\n                            onChange={(e) => this.update(e, \"name\")}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            size=\"sm\" type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            value={contact.email}\r\n                            onChange={(e) => this.update(e, \"email\")}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupPhone\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control\r\n                            size=\"sm\" type=\"tel\"\r\n                            placeholder=\"Enter phone\"\r\n                            value={contact.phone}\r\n                            onChange={(e) => this.update(e, \"phone\")}\r\n                        />\r\n                    </Form.Group>\r\n                    <ButtonToolbar className=\"justify-content-around\">\r\n                        {contact._id ?\r\n                            <Button variant=\"danger\" size=\"sm\"\r\n                                onClick={this.remove}>\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                            </Button>\r\n                            : <></>}\r\n                        <Button type=\"submit\">Save</Button>\r\n                    </ButtonToolbar>\r\n                </Form>\r\n                <Button onClick={this.back} size=\"sm\" className=\"btn-back\">\r\n                    <FontAwesomeIcon icon={faArrowLeft} />\r\n                </Button>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currContact: state.contactReducer.currContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveContact,\r\n    removeContact,\r\n    loadCurrContact\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactForm)","import React, { Component } from 'react';\r\n\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\n\r\nexport default class ContactEditPage extends Component {\r\n    \r\n    render() {\r\n        const { history, match } = this.props;\r\n        return (\r\n            <ContactForm _id={match.params.id} history={history} />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\nexport default class Chart extends Component {\r\n    render() {\r\n        const { options } = this.props.options;\r\n        return (\r\n            <div>\r\n                <HighchartsReact\r\n                    highcharts={Highcharts}\r\n                    options={options}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Chart from '../../components/Chart/Chart';\r\nimport BitCoinService from '../../services/BitCoinService'\r\n\r\nexport default class StatisticsPage extends Component {\r\n    state = {\r\n        marketPriceData: null,\r\n        dailyTransData: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const marketPriceData = await BitCoinService.getMarketPrice();\r\n        this.setState({\r\n            marketPriceData: this.formatData(marketPriceData)\r\n        })\r\n        const dailyTransData = await BitCoinService.getConfirmedTransactions();\r\n        this.setState({\r\n            dailyTransData: this.formatData(dailyTransData)\r\n        })\r\n    }\r\n\r\n    formatData(data) {\r\n        return {\r\n            options: {\r\n                xAxis: {\r\n                    type: 'datetime',\r\n                    labels: {\r\n                        format: '{value:%Y-%m-%d}',\r\n                    }\r\n                },\r\n                title: {\r\n                    text: data.name\r\n                },\r\n                series: [{\r\n                    data: data['values'].map(curr => {\r\n                        return [\r\n                            (curr.x * 1000),\r\n                            curr.y\r\n                        ]\r\n                    })\r\n                }]\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { marketPriceData, dailyTransData } = this.state;\r\n        return (\r\n            marketPriceData && dailyTransData && <section>\r\n                <Chart options={marketPriceData} />\r\n                <Chart options={dailyTransData} />\r\n            </section>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from './components/Header/Header';\nimport HomePage from './pages/HomePage/HomePage';\nimport SignUpPage from './pages/SignUpPage/SignUpPage';\nimport ContactsPage from './pages/ContactsPage/ContactsPage';\nimport ContactDetails from './pages/ContactDetailsPage/ContactDetailsPage';\nimport ContactEditPage from './pages/ContactEditPage/ContactEditPage';\nimport StatisticsPage from './pages/StatistictsPage/StatistictsPage';\n\nexport default class App extends React.Component {\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/signup\" component={SignUpPage} />\n          <Route exact path=\"/contact\" component={ContactsPage} />\n          <Route exact path=\"/contact/edit/:id?\" component={ContactEditPage} />\n          <Route exact path=\"/contact/:id\" component={ContactDetails} />\n          <Route exact path=\"/statistics\" component={StatisticsPage} />\n        </Switch>\n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\r\n    contacts: [],\r\n    currContact: null\r\n}\r\n\r\nexport default function contactReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact: action.contact\r\n            }\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts\r\n            }\r\n        case 'REMOVE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts.filter(currContact => {\r\n                    return action.contactId !== currContact._id\r\n                })]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            let idx = state.contacts.findIndex(currContact => {\r\n                return currContact._id === action.contact._id\r\n            })\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    ...state.contacts.slice(0, idx),\r\n                    action.contact,\r\n                    ...state.contacts.slice(idx + 1)\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const INITIAL_STATE = {\r\n    user: {}\r\n}\r\n\r\nexport default function userReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport contactReducer from './reducers/contactReducer';\r\nimport userReducer from './reducers/userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    contactReducer,\r\n    userReducer\r\n})\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}