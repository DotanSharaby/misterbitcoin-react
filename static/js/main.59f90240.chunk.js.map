{"version":3,"sources":["components/Header/Header.jsx","services/BitCoinService.js","services/UserService.js","actions/UserActions.js","components/TransferList/TransferList.jsx","pages/HomePage/HomePage.jsx","pages/SignUpPage/SignUpPage.jsx","components/ContactPreview/ContactPreview.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","services/ContactService.js","actions/ContactsActions.js","pages/ContactsPage/ContactsPage.jsx","components/TransferFund/TransferFund.jsx","pages/ContactDetailsPage/ContactDetailsPage.jsx","components/ContactForm/ContactForm.jsx","pages/ContactEditPage/ContactEditPage.jsx","App.jsx","serviceWorker.js","reducers/contactReducer.js","reducers/userReducer.js","store.js","index.js"],"names":["Header","state","isOpen","toggleMenu","setState","className","this","onClick","to","icon","faHome","faUsers","faChartLine","Component","getRate","coins","a","async","getMarketPrice","getConfirmedTransactions","signup","name","user","JSON","parse","localStorage","getItem","transfers","_newUser","setItem","stringify","Promise","resolve","addTransfer","contact","amount","unshift","transferFormat","_id","updateStorage","getLoggedinUser","toId","at","Date","toJSON","slice","setUser","type","dispatch","UserService","TransferList","length","map","value","index","key","HomePage","rate","BitCoinService","res","props","history","push","Container","Row","Col","lg","faCoins","mapDispatchToProps","connect","SignUp","update","ev","field","target","prevState","userSignup","preventDefault","onSubmit","placeholder","onChange","e","ContactPreview","height","src","alt","contacts","ContactFilter","handleFilter","Form","inline","FormControl","getContacts","filterBy","reject","term","contactsToReturn","toLocaleLowerCase","filter","includes","phone","email","sort","b","getContactById","id","find","removeContact","findIndex","splice","saveContact","c","_updateContact","txt","possible","i","charAt","Math","floor","random","_makeId","_addContact","getEmptyContact","window","updateContact","addContact","removeContactFromStore","contactId","setContacts","setCurrContact","loadCurrContact","ContactService","ContactsPage","filteredContacts","filterContacts","prevProps","contactsToShow","faPlus","contactReducer","TransferFund","transfer","Group","Label","Control","size","max","min","Button","faPaperPlane","ContactDetailsPage","makeTransfer","filterTransfers","t","back","go","match","params","faArrowLeft","faEdit","updatedUser","userReducer","ContactForm","remove","currContact","save","console","log","controlId","variant","faTrash","savedContact","ContactEditPage","App","exact","path","component","SignUpPage","ContactDetails","React","Boolean","location","hostname","INITIAL_STATE","rootReducer","combineReducers","action","idx","store","createStore","applyMiddleware","thunk","createBrowserHistory","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.59f90240.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faUsers, faChartLine } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './Header.scss';\r\n\r\nexport default class Header extends Component {\r\n    state = {\r\n        isOpen: false\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        const { isOpen } = this.state;\r\n        this.setState({ isOpen: !isOpen })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <header className={this.state.isOpen ? \"opened-menu\" : \"\"}>\r\n                <div className=\"screen\" onClick={this.toggleMenu}></div>\r\n                <span className=\"logo\">Mister BitCoin</span>\r\n                <nav className=\"navbar-nav\" onClick={this.toggleMenu}>\r\n                    <Link to='/' className=\"nav-item\"><FontAwesomeIcon icon={faHome} /></Link>\r\n                    <Link to='/contact' className=\"nav-item\"><FontAwesomeIcon icon={faUsers} /></Link>\r\n                    <Link to='/statistics' className=\"nav-item\"><FontAwesomeIcon icon={faChartLine} /></Link>\r\n                </nav>\r\n                <button onClick={this.toggleMenu} className=\"menu-btn\">☰</button>\r\n            </header>\r\n        )\r\n    }\r\n}\r\n","\r\n// import axios from 'axios';\r\n\r\nexport default {\r\n    getRate,\r\n    getMarketPrice,\r\n    getConfirmedTransactions\r\n}\r\n\r\nasync function getRate(coins) {\r\n    // const res = getMarketPrice();\r\n    // return coins / res;\r\n    return 0.15\r\n}\r\n\r\nasync function getMarketPrice() {\r\n    // const res = await axios.get(`https://blockchain.info/tobtc?currency=USD&value=1`);\r\n    // return res.data;\r\n}\r\n\r\nfunction getConfirmedTransactions() {\r\n\r\n}","\r\nexport default {\r\n    signup,\r\n    addTransfer,\r\n    getLoggedinUser\r\n}\r\n\r\nfunction addTransfer(user, contact, amount) {\r\n    user.transfers.unshift(transferFormat(contact._id,contact.name,amount))\r\n    user.coins -= amount;\r\n    updateStorage(user);\r\n    return Promise.resolve(user);\r\n}\r\n\r\nfunction transferFormat(toId, to, amount) {\r\n    return {\r\n        toId,\r\n        to,\r\n        amount,\r\n        at: new Date().toJSON().slice(0,10)\r\n    }\r\n}\r\n\r\nfunction signup(name) {\r\n    var user = JSON.parse(localStorage.getItem(name))\r\n    if (!user) {\r\n        user = _newUser(name);\r\n        localStorage.setItem(user.name, JSON.stringify(user));\r\n    }\r\n    localStorage.setItem(\"loggedinUser\", JSON.stringify(user));\r\n    return Promise.resolve(user)\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    const user = JSON.parse(localStorage.getItem(\"loggedinUser\"))\r\n    return Promise.resolve(user)\r\n}\r\n\r\nfunction updateStorage(user){\r\n    localStorage.setItem(user.name, JSON.stringify(user));\r\n    localStorage.setItem(\"loggedinUser\", JSON.stringify(user));\r\n}\r\n\r\nfunction _newUser(name) {\r\n    return {\r\n        name,\r\n        coins: 100,\r\n        transfers: []\r\n    }\r\n}","import UserService from '../services/UserService'\r\n\r\nconst setUser = (user) => {\r\n    return { type: 'SET_USER', user }\r\n}\r\n\r\nexport const signup = ({ name }) => {\r\n    return async (dispatch) => {\r\n        const user = await UserService.signup(name);\r\n        return dispatch(setUser(user))\r\n    }\r\n}\r\n\r\nexport const getLoggedinUser = () => {\r\n    return async (dispatch) => {\r\n        const user = await UserService.getLoggedinUser();\r\n        return dispatch(setUser(user))\r\n    }\r\n}\r\n\r\nexport const makeTransfer = (user, contact, amount) => {\r\n    return async (dispatch) => {\r\n        const updatedUser = await UserService.addTransfer(user, contact, amount);\r\n        return dispatch(setUser(updatedUser))\r\n    }\r\n}","import React from 'react';\r\nimport './TransferList.scss';\r\n\r\nexport function TransferList({ transfers }) {\r\n\r\n    if (transfers.length) return (\r\n        <>\r\n            <h4>Transfter history:</h4>\r\n            <ul className=\"clean-list\">\r\n                {transfers.map((value, index) => {\r\n                    return <li className=\"d-flex flex-column transfer-info-container\" key={index}>\r\n                        <span>To: {value.to}</span>\r\n                        <span>Amount: ₿{value.amount}</span>\r\n                        <span>At: {value.at}</span>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n        </>\r\n    ); else return (\r\n        <h4>No previous transfers</h4>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport BitCoinService from '../../services/BitCoinService';\r\nimport './HomePage.scss';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCoins } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { getLoggedinUser } from '../../actions/UserActions';\r\nimport { TransferList } from '../../components/TransferList/TransferList';\r\n\r\nclass HomePage extends Component {\r\n    state = {\r\n        rate: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await BitCoinService.getRate();\r\n        const { user } = await this.props.getLoggedinUser();\r\n        this.setState({\r\n            rate: res,\r\n            user\r\n        });\r\n        if (!user) this.props.history.push('/signup');\r\n    }\r\n\r\n    render() {\r\n        const { rate, user } = this.state;\r\n        if (user) return (\r\n            rate &&\r\n            <Container className=\"homepage-container\">\r\n                <Row>\r\n                    <Col lg={true}>\r\n                        <h3>Hi {user.name} !</h3>\r\n                        <h5><FontAwesomeIcon icon={faCoins} /> BitCoins: {user.coins}</h5>\r\n                        <h5>BTC: ₿{rate}</h5>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col lg={true}>\r\n                        <TransferList transfers={user.transfers.slice(0, 3)} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n        else return (\r\n            <></>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedinUser\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(HomePage);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { signup } from '../../actions/UserActions'\r\n\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        name: null\r\n    }\r\n\r\n    update = (ev, field) => {\r\n        const { value } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                name: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    userSignup = async (ev) => {\r\n        ev.preventDefault();\r\n        await this.props.signup(this.state.name);\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form onSubmit={this.userSignup}>\r\n                <h3>Signup page!</h3>\r\n                <input type=\"text\" placeholder=\"username\" \r\n                onChange={(e) => this.update(e, \"name\")} />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    signup\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(SignUp)","import React from 'react'\r\n\r\nexport default function ContactPreview(props) {\r\n    const { contact } = props;\r\n    return (\r\n        <li>\r\n            <span>\r\n                <img height=\"50px\" src={`https://robohash.org/${contact.name}.png`} alt=\"\" />\r\n            </span>\r\n            <span>{contact.name}</span>\r\n        </li>\r\n    )\r\n}","import React from 'react';\r\nimport './ContactList.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport ContactPreview from '../ContactPreview/ContactPreview';\r\n\r\nexport default function ({ contacts }) {\r\n    return (\r\n        <ul className=\"clean-list\">\r\n            {contacts.map(contact => {\r\n                return (\r\n                    <Link to={`contact/${contact._id}`} key={contact._id}>\r\n                        <ContactPreview contact={contact} />\r\n                    </Link>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport FormControl from 'react-bootstrap/FormControl';\r\nimport './ContactFilter.scss'\r\nexport function ContactFilter({ handleFilter }) {\r\n    return (\r\n        <Form inline>\r\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-auto ml-auto\" onChange={(ev) => handleFilter(ev.target.value)} />\r\n        </Form>\r\n    )\r\n}\r\n\r\n","\nexport default {\n  getContacts,\n  getContactById,\n  removeContact,\n  saveContact,\n  getEmptyContact\n}\n\nfunction sort(arr) {\n  return arr.sort((a, b) => {\n    if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\n      return -1;\n    }\n    if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\n      return 1;\n    }\n    return 0;\n  })\n}\n\nfunction getContacts(filterBy = null) {\n  return new Promise((resolve, reject) => {\n    var contactsToReturn = contacts;\n    if (filterBy) {\n      contactsToReturn = filter(filterBy)\n    }\n    resolve(sort(contactsToReturn))\n  })\n}\n\nfunction getContactById(id) {\n  return new Promise((resolve, reject) => {\n    const contact = contacts.find(contact => contact._id === id)\n    contact ? resolve(contact) : reject(`Contact id ${id} not found!`)\n  })\n}\n\nfunction removeContact(id) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(contact => contact._id === id)\n    if (index !== -1) {\n      contacts.splice(index, 1)\n    }\n    resolve(contacts)\n  })\n}\n\nfunction _updateContact(contact) {\n  return new Promise((resolve, reject) => {\n    const index = contacts.findIndex(c => contact._id === c._id)\n    if (index !== -1) {\n      contacts[index] = contact\n    }\n    resolve(contact)\n  })\n}\n\nfunction _addContact(contact) {\n  return new Promise((resolve, reject) => {\n    contact._id = _makeId()\n    contacts.push(contact)\n    resolve(contact)\n  })\n}\n\nfunction saveContact(contact) {\n  return contact._id ? _updateContact(contact) : _addContact(contact)\n}\n\nfunction getEmptyContact() {\n  return {\n    name: '',\n    email: '',\n    phone: ''\n  }\n}\n\nfunction filter(term) {\n  term = term.toLocaleLowerCase()\n  return contacts.filter(contact => {\n    return contact.name.toLocaleLowerCase().includes(term) ||\n      contact.phone.toLocaleLowerCase().includes(term) ||\n      contact.email.toLocaleLowerCase().includes(term)\n  })\n}\n\nfunction _makeId(length = 10) {\n  var txt = ''\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  for (var i = 0; i < length; i++) {\n    txt += possible.charAt(Math.floor(Math.random() * possible.length))\n  }\n  return txt\n}\n\n\nconst contacts = [\n  {\n    \"_id\": \"5a56640269f443a5d64b32ca\",\n    \"name\": \"Ochoa Hyde\",\n    \"email\": \"ochoahyde@renovize.com\",\n    \"phone\": \"+1 (968) 593-3824\"\n  },\n  {\n    \"_id\": \"5a5664025f6ae9aa24a99fde\",\n    \"name\": \"Hallie Mclean\",\n    \"email\": \"halliemclean@renovize.com\",\n    \"phone\": \"+1 (948) 464-2888\"\n  },\n  {\n    \"_id\": \"5a56640252d6acddd183d319\",\n    \"name\": \"Parsons Norris\",\n    \"email\": \"parsonsnorris@renovize.com\",\n    \"phone\": \"+1 (958) 502-3495\"\n  },\n  {\n    \"_id\": \"5a566402ed1cf349f0b47b4d\",\n    \"name\": \"Rachel Lowe\",\n    \"email\": \"rachellowe@renovize.com\",\n    \"phone\": \"+1 (911) 475-2312\"\n  },\n  {\n    \"_id\": \"5a566402abce24c6bfe4699d\",\n    \"name\": \"Dominique Soto\",\n    \"email\": \"dominiquesoto@renovize.com\",\n    \"phone\": \"+1 (807) 551-3258\"\n  },\n  {\n    \"_id\": \"5a566402a6499c1d4da9220a\",\n    \"name\": \"Shana Pope\",\n    \"email\": \"shanapope@renovize.com\",\n    \"phone\": \"+1 (970) 527-3082\"\n  },\n  {\n    \"_id\": \"5a566402f90ae30e97f990db\",\n    \"name\": \"Faulkner Flores\",\n    \"email\": \"faulknerflores@renovize.com\",\n    \"phone\": \"+1 (952) 501-2678\"\n  },\n  {\n    \"_id\": \"5a5664027bae84ef280ffbdf\",\n    \"name\": \"Holder Bean\",\n    \"email\": \"holderbean@renovize.com\",\n    \"phone\": \"+1 (989) 503-2663\"\n  },\n  {\n    \"_id\": \"5a566402e3b846c5f6aec652\",\n    \"name\": \"Rosanne Shelton\",\n    \"email\": \"rosanneshelton@renovize.com\",\n    \"phone\": \"+1 (968) 454-3851\"\n  },\n  {\n    \"_id\": \"5a56640272c7dcdf59c3d411\",\n    \"name\": \"Pamela Nolan\",\n    \"email\": \"pamelanolan@renovize.com\",\n    \"phone\": \"+1 (986) 545-2166\"\n  },\n  {\n    \"_id\": \"5a5664029a8dd82a6178b15f\",\n    \"name\": \"Roy Cantu\",\n    \"email\": \"roycantu@renovize.com\",\n    \"phone\": \"+1 (929) 571-2295\"\n  },\n  {\n    \"_id\": \"5a5664028c096d08eeb13a8a\",\n    \"name\": \"Ollie Christian\",\n    \"email\": \"olliechristian@renovize.com\",\n    \"phone\": \"+1 (977) 419-3550\"\n  },\n  {\n    \"_id\": \"5a5664026c53582bb9ebe9d1\",\n    \"name\": \"Nguyen Walls\",\n    \"email\": \"nguyenwalls@renovize.com\",\n    \"phone\": \"+1 (963) 471-3181\"\n  },\n  {\n    \"_id\": \"5a56640298ab77236845b82b\",\n\n    \"name\": \"Glenna Santana\",\n    \"email\": \"glennasantana@renovize.com\",\n    \"phone\": \"+1 (860) 467-2376\"\n  },\n  {\n    \"_id\": \"5a56640208fba3e8ecb97305\",\n    \"name\": \"Malone Clark\",\n    \"email\": \"maloneclark@renovize.com\",\n    \"phone\": \"+1 (818) 565-2557\"\n  },\n  {\n    \"_id\": \"5a566402abb3146207bc4ec5\",\n    \"name\": \"Floyd Rutledge\",\n    \"email\": \"floydrutledge@renovize.com\",\n    \"phone\": \"+1 (807) 597-3629\"\n  },\n  {\n    \"_id\": \"5a56640298500fead8cb1ee5\",\n    \"name\": \"Grace James\",\n    \"email\": \"gracejames@renovize.com\",\n    \"phone\": \"+1 (959) 525-2529\"\n  },\n  {\n    \"_id\": \"5a56640243427b8f8445231e\",\n    \"name\": \"Tanner Gates\",\n    \"email\": \"tannergates@renovize.com\",\n    \"phone\": \"+1 (978) 591-2291\"\n  },\n  {\n    \"_id\": \"5a5664025c3abdad6f5e098c\",\n    \"name\": \"Lilly Conner\",\n    \"email\": \"lillyconner@renovize.com\",\n    \"phone\": \"+1 (842) 587-3812\"\n  }\n];\n\nwindow.contacts = contacts","import ContactService from '../services/ContactService';\r\n\r\nconst updateContact = (contact) => {\r\n    return { type: 'UPDATE_CONTACT', contact }\r\n}\r\n\r\nconst addContact = (contact) => {\r\n    return { type: 'ADD_CONTACT', contact }\r\n}\r\n\r\nexport const saveContact = (contact) => {\r\n    const contactId = contact._id;\r\n    return async (dispatch) => {\r\n        const savedContact = await ContactService.saveContact(contact);\r\n        if (contactId) {\r\n            return dispatch(updateContact(savedContact))\r\n        } else {\r\n            return dispatch(addContact(savedContact))\r\n        }\r\n    }\r\n}\r\n\r\nconst removeContactFromStore = (contactId) => {\r\n    return { type: 'REMOVE_CONTACT', contactId }\r\n}\r\n\r\nexport const removeContact = (contact) => {\r\n    const contactId = contact._id;\r\n    return async (dispatch) => {\r\n        await ContactService.removeContact(contactId);\r\n        return dispatch(removeContactFromStore(contactId))\r\n    }\r\n}\r\n\r\nconst setContacts = (contacts) => {\r\n    return { type: 'SET_CONTACTS', contacts }\r\n}\r\n\r\nexport const getContacts = (filterBy) => {\r\n    return async (dispatch) => {\r\n        const contacts = await ContactService.getContacts(filterBy);\r\n        return dispatch(setContacts(contacts))\r\n    }\r\n}\r\n\r\nexport const setCurrContact = (contact) => {\r\n    return { type: 'SET_CURR_CONTACT', contact }\r\n}\r\n\r\nexport const loadCurrContact = (id) => {\r\n    return async (dispatch) => {\r\n        const contact = await ContactService.getContactById(id);\r\n        return dispatch(setCurrContact(contact))\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport ContactList from '../../components/ContactList/ContactList';\r\nimport { ContactFilter } from '../../components/ContactFilter/ContactFilter';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getContacts } from '../../actions/ContactsActions';\r\nimport { getLoggedinUser } from '../../actions/UserActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './ContactsPage.scss';\r\n\r\nclass ContactsPage extends Component {\r\n    state = {\r\n        term: '',\r\n        filteredContacts: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const filteredContacts = await this.filterContacts();\r\n        this.setState({ filteredContacts })\r\n        const { user } = await this.props.getLoggedinUser();\r\n        if (!user) this.props.history.push('/signup')\r\n    }\r\n\r\n    handleFilter = (value) => {\r\n        this.setState({ term: value })\r\n    }\r\n\r\n    filterContacts = async () => {\r\n        const term = this.state.term\r\n        const { contacts } = await this.props.getContacts(term)\r\n        return contacts;\r\n    }\r\n\r\n    async componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.term === this.state.term) return\r\n        const filteredContacts = await this.filterContacts()\r\n        this.setState({ filteredContacts })\r\n    }\r\n\r\n    render() {\r\n        const { filteredContacts } = this.state;\r\n        const { contacts } = this.props;\r\n        let contactsToShow;\r\n        if (!filteredContacts) contactsToShow = contacts;\r\n        else contactsToShow = filteredContacts;\r\n\r\n        return (\r\n            <Container className=\"contacts-page-container\">\r\n                <Row>\r\n                    <Col lg={true}>\r\n                        <Link to=\"/contact/edit\"><FontAwesomeIcon icon={faPlus} className=\"add-contact-btn\" /></Link>\r\n                        <ContactFilter handleFilter={this.handleFilter} />\r\n                        <ContactList contacts={contactsToShow} />\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contactReducer.contacts\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    getContacts,\r\n    getLoggedinUser\r\n}\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactsPage)","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPaperPlane } from '@fortawesome/free-solid-svg-icons';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport './TransferFund.scss';\r\n\r\n\r\nexport default class TransferFund extends Component {\r\n    state = {\r\n        amount: null\r\n    }\r\n\r\n    update = (ev) => {\r\n        const { value } = ev.target\r\n        this.setState({ amount: value })\r\n    }\r\n\r\n    render() {\r\n        const { user, transfer } = this.props\r\n        const { amount } = this.state\r\n        if (user) return (\r\n            <Form onSubmit={(ev) => transfer(ev, amount)} className=\"transfer-form\">\r\n                <Form.Group>\r\n                    <Form.Label>Transfer BitCoin ₿</Form.Label>\r\n                    <Form.Control\r\n                        size=\"sm\" type=\"number\" max={user.coins} min=\"0\"\r\n                        placeholder=\"0\"\r\n                        onChange={(e) => this.update(e)}\r\n                    />\r\n\r\n                    <Button type=\"submit\" size=\"sm\">\r\n                        <FontAwesomeIcon size=\"sm\" icon={faPaperPlane} />\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport ContactService from '../../services/ContactService';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport TransferFund from '../../components/TransferFund/TransferFund';\r\nimport { TransferList } from '../../components/TransferList/TransferList';\r\nimport { getLoggedinUser, makeTransfer } from '../../actions/UserActions';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport './ContactDetailsPage.scss';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nclass ContactDetailsPage extends Component {\r\n    state = {\r\n        contact: null,\r\n        amount: null,\r\n        transfers: []\r\n    }\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const contact = await ContactService.getContactById(id);\r\n        if (contact) this.setState({ contact });\r\n        const { user } = await this.props.getLoggedinUser();\r\n        this.setState({ user });\r\n        if (!user) this.props.history.push('/signup');\r\n        this.filterTransfers(user, contact);\r\n    }\r\n\r\n    transfer = async (ev, amount) => {\r\n        ev.preventDefault();\r\n        const { user, contact } = this.state;\r\n        await this.props.makeTransfer(user, contact, amount);\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    filterTransfers = (user, contact) => {\r\n        var transfers = user.transfers.filter(t => t.toId === contact._id);\r\n        transfers = transfers.slice(0, 3)\r\n        this.setState({ transfers })\r\n    }\r\n\r\n    back = () => {\r\n        this.props.history.go(-1);\r\n    }\r\n\r\n    render() {\r\n        const { contact, transfers } = this.state;\r\n        const { user } = this.props;\r\n        \r\n        if (contact) return (\r\n            <Container className=\"contact-details\">\r\n                <h3>{contact.name}</h3>\r\n                <img src={`https://robohash.org/${contact.name}.png`} height=\"80px\" alt=\"Contact\" />\r\n                <h5>{contact.email}</h5>\r\n                <h5>{contact.phone}</h5>\r\n\r\n                <TransferFund transfer={this.transfer} user={user} />\r\n\r\n                <Button onClick={this.back} size=\"sm\">\r\n                    <FontAwesomeIcon icon={faArrowLeft} />\r\n                </Button>\r\n                <Link to={'/contact/edit/' + contact._id}>\r\n                    <Button size=\"sm\">\r\n                        <FontAwesomeIcon icon={faEdit} />\r\n                    </Button>\r\n                </Link>\r\n                <TransferList transfers={transfers} />\r\n            </Container>\r\n        )\r\n        else return (\r\n            <h1>No contact was found</h1>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        user: state.userReducer.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    getLoggedinUser,\r\n    makeTransfer\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactDetailsPage)","import React, { Component } from 'react';\r\nimport ContactService from '../../services/ContactService';\r\nimport { connect } from 'react-redux';\r\nimport './ContactForm.scss';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowLeft, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport { saveContact, removeContact, loadCurrContact } from '../../actions/ContactsActions';\r\n\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        contact: {}\r\n    }\r\n    async componentDidMount() {\r\n        let contact;\r\n        if (this.props._id) {\r\n            contact = await this.props.loadCurrContact(this.props._id);\r\n            contact = contact.contact;\r\n        }\r\n        else contact = ContactService.getEmptyContact();\r\n        console.log(contact)\r\n        this.setState({ contact })\r\n    }\r\n    update = (ev, field) => {\r\n        const { value } = ev.target\r\n        this.setState(prevState => {\r\n            return {\r\n                contact: {\r\n                    ...prevState.contact,\r\n                    [field]: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    remove = async () => {\r\n        const { currContact, removeContact } = this.props\r\n        await removeContact(currContact);\r\n        this.props.history.push('/contact');\r\n    }\r\n\r\n    save = async (ev) => {\r\n        ev.preventDefault()\r\n        await this.props.saveContact(this.state.contact);\r\n        this.props.history.push('/contact');\r\n    }\r\n\r\n    back = () => {\r\n        this.props.history.go(-1);\r\n    }\r\n\r\n    render() {\r\n        const { contact } = this.state;\r\n        console.log('contact', contact)\r\n        return (\r\n            contact && <Container>\r\n                <Form onSubmit={this.save} className=\"my-form\">\r\n                    <Form.Group controlId=\"formGroupName\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            size=\"sm\" type=\"text\"\r\n                            placeholder=\"Enter name\"\r\n                            value={contact.name}\r\n                            onChange={(e) => this.update(e, \"name\")}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            size=\"sm\" type=\"email\"\r\n                            placeholder=\"Enter email\"\r\n                            value={contact.email}\r\n                            onChange={(e) => this.update(e, \"email\")}\r\n                        />\r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formGroupPhone\">\r\n                        <Form.Label>Phone</Form.Label>\r\n                        <Form.Control\r\n                            size=\"sm\" type=\"tel\"\r\n                            placeholder=\"Enter phone\"\r\n                            value={contact.phone}\r\n                            onChange={(e) => this.update(e, \"phone\")}\r\n                        />\r\n                    </Form.Group>\r\n                    <Button type=\"submit\">Save</Button>\r\n                </Form>\r\n                <Button onClick={this.back} size=\"sm\" className=\"btn-back\">\r\n                    <FontAwesomeIcon icon={faArrowLeft} />\r\n                </Button>\r\n                {contact._id ?\r\n                    <Button variant=\"danger\" size=\"sm\"\r\n                        className=\"btn-remove\"\r\n                        onClick={this.remove}>\r\n                        <FontAwesomeIcon icon={faTrash} />\r\n                    </Button>\r\n                    : <></>}\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currContact: state.contactReducer.currContact\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    saveContact,\r\n    removeContact,\r\n    loadCurrContact\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ContactForm)","import React, { Component } from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { loadCurrContact } from '../../actions/ContactsActions'\r\n\r\nimport ContactForm from '../../components/ContactForm/ContactForm';\r\n\r\n\r\nclass ContactEditPage extends Component {\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        if (id) {\r\n            await this.props.loadCurrContact(id);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { history, match } = this.props;\r\n        if (!match.params.id) return (\r\n            <section>\r\n                <h3>Add Contact</h3>\r\n                <ContactForm history={history} />\r\n            </section>\r\n        )\r\n        else return (\r\n            <section>\r\n                <h3>Edit Contact</h3>\r\n                <ContactForm _id={match.params.id} history={history} />\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadCurrContact\r\n};\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(ContactEditPage)","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Header from './components/Header/Header';\nimport HomePage from './pages/HomePage/HomePage';\nimport SignUpPage from './pages/SignUpPage/SignUpPage';\nimport ContactsPage from './pages/ContactsPage/ContactsPage';\nimport ContactDetails from './pages/ContactDetailsPage/ContactDetailsPage';\nimport ContactEditPage from './pages/ContactEditPage/ContactEditPage';\n\nimport { connect } from 'react-redux';\n\nclass App extends React.Component {\n\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/signup\" component={SignUpPage} />\n          <Route exact path=\"/contact\" component={ContactsPage} />\n          <Route exact path=\"/contact/edit/:id?\" component={ContactEditPage} />\n          <Route exact path=\"/contact/:id\" component={ContactDetails} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = {\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const INITIAL_STATE = {\r\n    contacts: [],\r\n    currContact: null\r\n}\r\n\r\nexport default function contactReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_CURR_CONTACT':\r\n            return {\r\n                ...state,\r\n                currContact: action.contact\r\n            }\r\n        case 'SET_CONTACTS':\r\n            return {\r\n                ...state,\r\n                contacts: action.contacts\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts, action.contact]\r\n            }\r\n        case 'REMOVE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [...state.contacts.filter(currContact => {\r\n                    return action.contactId !== currContact._id\r\n                })]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            let idx = state.contacts.findIndex(currContact => {\r\n                return currContact._id === action.contact._id\r\n            })\r\n            return {\r\n                ...state,\r\n                contacts: [\r\n                    ...state.contacts.slice(0, idx),\r\n                    action.contact,\r\n                    ...state.contacts.slice(idx + 1)\r\n                ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","const INITIAL_STATE = {\r\n    user: {}\r\n}\r\n\r\nexport default function userReducer(state = INITIAL_STATE, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport contactReducer from './reducers/contactReducer';\r\nimport userReducer from './reducers/userReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    contactReducer,\r\n    userReducer\r\n})\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n)\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router history={history}>\n            <App />\n        </Router>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}